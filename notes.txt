Authentication

first create a user model -> in models folder and create user.model.js inside.
we also need to update the todo model to link to each user.

// when doing authentication -> add in a user model and link user to each todo by using a 
createdBy: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User'
}

in user model we have 2 fields, a phone number/email and password

-> we can do the hashing in the register route
we need to hash the password before saving -> need to npm i bcrypt,jsonwebtoken on node, app.js

we then go to app.js to add the register and login routes

For register: try the POST request
POST http://localhost:3100/auth/register
body -> raw -> json {"phone": "1", "password": "1"} -> gives back 
{
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWY2NDEwOGE4ZmVhYjIwOTQ4N2VmYmVjIn0sImlhdCI6MTYwMDM5MzM1NCwiZXhwIjoxNjAwMzk2OTU0fQ.DzbPhyArEzbFGaIg4RUd1XOuE3vUp0pz6hTAM90Adiw"
}
in robo3T -> there is a new user under collections->users

For login: try the POST request
POST http://localhost:3100/auth/login
body -> raw -> json {"phone": "1", "password": "1"} -> gives back 
{
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWY2NDEwOGE4ZmVhYjIwOTQ4N2VmYmVjIn0sImlhdCI6MTYwMDM5MzM1NCwiZXhwIjoxNjAwMzk2OTU0fQ.DzbPhyArEzbFGaIg4RUd1XOuE3vUp0pz6hTAM90Adiw"
}

//so we have verified that the register and login works

so now we should put the authentication accessing on the following routes:
GET /todos/
GET /todos/:id
POST /todos/add
POST /todos/update/:id
DELETE /todos/:id

--> need to debug the routes as getting an error  "message": "The token was not valid"
-->debugged by changing the key in .sign(in register & login) to match the key in .verify (in checkToken)
-> then do the axios calls to register, login and logout
-> need to tag the user.id when creating each new todo

added getUserProfile, login,register,logout handler -> need to turn things in App.js into a <Home/> component as getting very long

trying to log in on App.js just gives "Logged in,the token was sent successfully" repeatedly

but it bounces between Help! someone wants to hack us/ user not found




So now we need to connect the frontend to the backend (using axios calls)
->go to running folder run npm i axios
-> in App.js import axios from 'axios'
-> then add the axios calls

updated the todo model in node to match { text: "one", editing: false, edited: false }
we can then test that the  
axios
	.post("http://localhost:3100/todos/add", newTodo)
	.then((res) => console.log(res.data));
in the handlesubmit -> verify with postman that the frontend can add a new todo to the backend

we can use componentDidMount(){
axios
	.get('http://localhost:3100.todos/')
	.then(res=>{this.setState({todos: res.data})
	}).catch(function(error){
		console.log(error)
	})	
}
to load all the current todos we have stored in our database



//done add, get, update, delete
//left get one(get one not really needed in this case unless we want to show one todo on a single page)

//need to make modifications to how new todos are created as when todos are created through mongoose they are given a _.id field, which when we first create on App.js itself, this field does not appear
--> need to setState again after creating a new item



Unhandled Rejection (TypeError): Cannot read property 'catch' of undefined
(anonymous function)
C:/Users/Ji/projects/Todo/todoIIII/running/src/App.js:164
  161 | (res) => {
  162 |   console.log("This is in res.data of registerHandler", res.data);
  163 |   localStorage.setItem("token", res.data.token);
> 164 |   this.setState({
      | ^  165 |     isAuth: true,
  166 |   }).catch((err) => {
  167 |     console.log(err);

  -> seems like there is a problem with the state and the event handler that listens & update the state